services:
  minio:
    restart: always
    image: minio/minio@sha256:6d6cf693fd70ca6e15709fa44d39b44f98fc5b58795697486a95ac1cc2ad9880
    container_name: mlflow_s3
    ports:
        - "9000:9000"
        - "9001:9001"
    command: server /data --console-address ':9001' --address ':9000'
    environment:
        - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
        - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    volumes:
        - minio_data:/data
    networks:
      ml_mlflow-network:
        aliases:
          - minio

  mc:
    build: ./minio-init
    depends_on:
        - minio
    env_file:
        - .env
    entrypoint: >
        /bin/sh -c "
        /tmp/wait-for-it.sh minio:9000 &&
        /usr/bin/mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
        /usr/bin/mc mb minio/mlflow;
        exit 0;
        "
    networks:
        - ml_mlflow-network

  db:
    restart: always
    image: mysql/mysql-server@sha256:5b40d96b11333570143d98d3a74100fefadb9abb17b27a95dbc9ad33544ec142
    container_name: mlflow_db
    env_file:
        - .env
    environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
        - dbdata:/var/lib/mysql
    networks:
        - ml_mlflow-network

  web:
    restart: always
    build: ./mlflow
    depends_on:
        - mc
        - db
    env_file:
        - .env
    ports:
        - "5050:5000"
    environment:
        - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0
    networks:
      ml_mlflow-network:
        aliases:
          - web

volumes:
    dbdata:
    minio_data:

networks:
  ml_mlflow-network:
    driver: bridge
    external: true
